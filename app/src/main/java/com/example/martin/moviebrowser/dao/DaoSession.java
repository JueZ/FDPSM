package com.example.martin.moviebrowser.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.martin.moviebrowser.dao.MovieDetail;
import com.example.martin.moviebrowser.dao.MovieInfo;
import com.example.martin.moviebrowser.dao.Query;

import com.example.martin.moviebrowser.dao.MovieDetailDao;
import com.example.martin.moviebrowser.dao.MovieInfoDao;
import com.example.martin.moviebrowser.dao.QueryDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig movieDetailDaoConfig;
    private final DaoConfig movieInfoDaoConfig;
    private final DaoConfig queryDaoConfig;

    private final MovieDetailDao movieDetailDao;
    private final MovieInfoDao movieInfoDao;
    private final QueryDao queryDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        movieDetailDaoConfig = daoConfigMap.get(MovieDetailDao.class).clone();
        movieDetailDaoConfig.initIdentityScope(type);

        movieInfoDaoConfig = daoConfigMap.get(MovieInfoDao.class).clone();
        movieInfoDaoConfig.initIdentityScope(type);

        queryDaoConfig = daoConfigMap.get(QueryDao.class).clone();
        queryDaoConfig.initIdentityScope(type);

        movieDetailDao = new MovieDetailDao(movieDetailDaoConfig, this);
        movieInfoDao = new MovieInfoDao(movieInfoDaoConfig, this);
        queryDao = new QueryDao(queryDaoConfig, this);

        registerDao(MovieDetail.class, movieDetailDao);
        registerDao(MovieInfo.class, movieInfoDao);
        registerDao(Query.class, queryDao);
    }
    
    public void clear() {
        movieDetailDaoConfig.getIdentityScope().clear();
        movieInfoDaoConfig.getIdentityScope().clear();
        queryDaoConfig.getIdentityScope().clear();
    }

    public MovieDetailDao getMovieDetailDao() {
        return movieDetailDao;
    }

    public MovieInfoDao getMovieInfoDao() {
        return movieInfoDao;
    }

    public QueryDao getQueryDao() {
        return queryDao;
    }

}
